How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Preveious version is regarded as the correct one, which implies it has been already proven to work. THe new version is purposed to enhance some functionality of improve its performance, therefore it has to have some minor/major correction in text. THerefore the viewing two document is actually to try to check if the modified part is correclty written.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You easily forget what you did in the past. It keeps any idea (worse/better) so you cannot lose it.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Regular time based saving can lose some important information by external accident. However it prevents non-saving from human's slipping in their mind. 


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Logical change can be applied multiple files.

How can you use the commands git log and git diff to view the history of files?

    First I need list history and search comment and locate where I'm insterested in and compare the previous (or even further previous changes. 

How might using version control make you more confident to make changes that
could break something?

    I can go back to latest successfull version.

Now that you have your workspace set up, what do you want to try using Git for?

    Magaging development